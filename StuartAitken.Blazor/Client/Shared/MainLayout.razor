@using StuartAitken.Blazor.Client.Services
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AppStateContainer AppStateContainer
@inject ISnackbar Snackbar
@inject HttpClient Http

<MudLayout Style="@($"background-color:{Colors.Yellow.Default}")">
	<MudAppBar Style="@($"background-color:{Colors.Yellow.Accent4}")">
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Default" Style="@($"background-color:{Colors.Blue.Default}")" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />

		<MudHidden Breakpoint="Breakpoint.SmAndDown">
			<div class="site-title" style="@($"color:{Colors.Grey.Darken1}")">
				@Constants.SiteName
			</div>
		</MudHidden>

		<MudContainer MaxWidth="MaxWidth.Large">
			<CustomAppBarButton Icon="@Icons.Material.Filled.Home" Page="@Routes.Pages.Index" Tooltip="/home" />
			<CustomAppBarButton Icon="@Icons.Material.Filled.Dns" Page="@Routes.Pages.Projects" />
			<CustomAppBarButton Icon="@Icons.Material.Filled.DocumentScanner" Page="@Routes.Pages.CV" />
		</MudContainer>
		@*<CustomAppBarButton Icon="@Icons.Material.Filled.DocumentScanner" Color="Color.Secondary" Edge="Edge.False" Page="@(Routes.Pages.Projects)" />*@
		<MudSpacer />
		@*<MudNavLink Href="@Routes.Pages.Swagger" Target="_blank" Match="NavLinkMatch.Prefix">Swagger API</MudNavLink>*@
	</MudAppBar>
	<MudDrawer @bind-Open="@_drawerOpen" Style="@($"background-color:{Colors.Yellow.Accent4}")">
		<NavMenu />
	</MudDrawer>
	<MudMainContent>
		<MudContainer MaxWidth="MaxWidth.Large" Style="padding-top:1rem;min-height:100%">
			<MudPaper Style="@($"background-color:{Colors.Yellow.Accent1};padding:1rem")">
				@Body
			</MudPaper>
			<div class="login-container">
				@if (AppStateContainer.IsAdmin)
				{
					<MudButton Size="Size.Small" OnClick="@(() => {
										AppStateContainer.IsAdmin = false;
										AppStateContainer.Password = "";
										this.StateHasChanged();
																})">
						Logout
					</MudButton>
				}
				else
				{
					<MudTextField Class="login"
							  @bind-Value="AppStateContainer.Password"
							  Label="Admin Login"
							  InputType="InputType.Password"
							  Variant="Variant.Outlined"
							  OnKeyUp="OnPasswordKeyPress"
							  Margin="Margin.Dense">
					</MudTextField>
				}
			</div>
		</MudContainer>
	</MudMainContent>
</MudLayout>



@code {
	bool _drawerOpen = false;

	void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}


	protected override async Task OnInitializedAsync()
	{
		AppStateContainer.OnPasswordChange += StateHasChanged;
		AppStateContainer.OnChange += StateHasChanged;

		await base.OnInitializedAsync();
	}

	private async Task OnPasswordKeyPress(KeyboardEventArgs args)
	{
		if (args.Key == "Enter")
		{
			Http.AddAuthHeader(AppStateContainer.Password);
			var response = await Http.GetAsync(Routes.Api.Auth);
			ApiResponse? result = await response.Content.ReadFromJsonAsync<ApiResponse>();

			if (result?.Ok == true)
			{
				AppStateContainer.IsAdmin = true;
				this.StateHasChanged();
			}
			else
			{
				Snackbar.Add("Login failed", Severity.Info);
			}

		}
	}
}


<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />